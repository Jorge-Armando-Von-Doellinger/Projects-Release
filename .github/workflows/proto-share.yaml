name: Importar arquivos .proto para grpc-proto-files

on:
  push:
    paths:
      - '**/*.proto'  # Apenas arquivos .proto, mas pode ser qualquer mudança no repositório

jobs:
  import-protos:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out o repositório 'Projects-Release'
      - name: Check out repositório 'Projects-Release'
        uses: actions/checkout@v3

      # Step 2: Garantir que o diretório temporário exista
      - name: Criar diretório temporário para armazenar os arquivos
        run: mkdir -p /tmp/protos

      # Step 3: Buscar por arquivos .proto no repositório 'Projects-Release'
      - name: Buscar arquivos .proto no repositório 'Projects-Release'
        run: |
          echo "Buscando arquivos .proto no repositório"
          find . -type f -name "*.proto" > /tmp/protos/files.txt
          if [ -s /tmp/protos/files.txt ]; then
            echo "Arquivos .proto encontrados:"
            cat /tmp/protos/files.txt
          else
            echo "Nenhum arquivo .proto encontrado!"
            exit 1
          fi

      # Step 4: Clonar repositório grpc-proto-files
      - name: Clonar repositório 'grpc-proto-files' com autenticação via token
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Referência ao secret
        run: |
          git clone https://github.com/Jorge-Armando-Von-Doellinger/grpc-proto-files.git /tmp/grpc-proto-files
          cd /tmp/grpc-proto-files
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git status

      # Step 5: Criar diretório 'ProtoFiles' se não existir no repositório grpc-proto-files
      - name: Criar diretório de destino no repositório grpc-proto-files
        run: |
          mkdir -p /tmp/grpc-proto-files/ProtoFiles
          echo "Diretório /tmp/grpc-proto-files/ProtoFiles/ criado com sucesso."

      # Step 6: Verificar arquivos .proto encontrados
      - name: Verificar arquivos .proto encontrados
        run: |
          echo "Arquivos encontrados para mover:"
          cat /tmp/protos/files.txt

      # Step 7: Copiar arquivos .proto para o repositório 'grpc-proto-files'
      - name: Copiar arquivos .proto para o repositório 'grpc-proto-files'
        run: |
          while IFS= read -r file; do
            echo "Copiando $file para /tmp/grpc-proto-files/ProtoFiles/"
            # Certifique-se de que o caminho do arquivo seja correto
            cp "$file" /tmp/grpc-proto-files/ProtoFiles/ || echo "Erro ao copiar $file"
          done < /tmp/protos/files.txt

      # Step 8: Verificar arquivos copiados no repositório 'grpc-proto-files'
      - name: Verificar arquivos copiados para ProtoFiles
        run: ls -l /tmp/grpc-proto-files/ProtoFiles/

      # Step 9: Garantir permissões corretas para o diretório de destino
      - name: Garantir permissões corretas
        run: chmod -R 755 /tmp/grpc-proto-files/ProtoFiles/

      # Step 10: Fazer commit e push dos arquivos copiados para o repositório grpc-proto-files
      - name: Commit e push para grpc-proto-files
        run: |
          cd /tmp/grpc-proto-files
          git status
          git add .
          git commit -m "Importando arquivos .proto de Projects-Release"
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/Jorge-Armando-Von-Doellinger/grpc-proto-files.git HEAD:main
